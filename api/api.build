include(Path: ../globals.build)

compile(
	out javac,
) {
	$javac = saker.java.compile(
		SourceDirectories: src/,
		ClassPath: [
			saker.java.classpath.bundle(nest.dependency.resolve(
				saker.apiextract-api,
				Filters: nest.dependency.filter.compile(CompileTransitive: false),
			)),
		],
		Identifier: api,
		CompilerOptions: global(COMPILER_OPTIONS),
	)
}
export(
	out javac,
	out jar,
){
	$compile = compile()
	$javac = $compile[javac]
	$jar = saker.jar.create(
		Output: saker.rmi-api.jar,
		Resources: [
			{
				Directory: $javac[ClassDirectory],
				Resources: **
			},
			{
				Files: "wd:/LICENSE",
				TargetDirectory: META-INF,
			},
		],
		Manifest: {
			MainAttributes: {
				Nest-Bundle-Format-Version: 1,
				Nest-Bundle-Identifier: "saker.rmi-api-v{ global(VERSION_saker.rmi) }",
				Nest-Bundle-Source: "saker.rmi-sources-v{ global(VERSION_saker.rmi) }",
			},
		},
	)
}
install(){
	$export = export()
	nest.local.install($export[jar][Path])
}