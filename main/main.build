include(Path: ../globals.build)

compile(
	out javac,
	in testing = false,
) {
	$apijavac = include(compile, Path: ../api/api.build)[javac]
	$javac = saker.java.compile(
		SourceDirectories: [
			src/,
		],
		ClassPath: [
			$apijavac,
			# only the saker.util, no transitive dependencies, because it also includes saker.rmi
			# so that would be a circular dependency in this case
			saker.java.classpath.bundle(nest.dependency.resolve(
				Bundles: saker.util,
				Filters: nest.dependency.filter.kind([])
			)),
			saker.maven.classpath(Artifacts: saker.maven.resolve("org.ow2.asm:asm:jar:7.2"))
		],
		Identifier: "main{ $testing ? "-testing" : "" }",
		CompilerOptions: global(COMPILER_OPTIONS),
	)
}
export(
	out javac,
	out jar,
){
	$compile = compile()
	$javac = $compile[javac]
	$jar = saker.jar.create(
		Output: saker.rmi.jar,
		Resources: [
			{
				Directory: $javac[ClassDirectory],
				Resources: **
			},
			{
				Directory: res/,
				Resources: **,
			},
			{
				Files: "wd:/LICENSE",
				TargetDirectory: META-INF,
			},
		],
		Manifest: {
			MainAttributes: {
				Nest-Bundle-Format-Version: 1,
				Nest-Bundle-Identifier: "saker.rmi-v{ global(VERSION_saker.rmi) }",
				Nest-Bundle-Source: "saker.rmi-sources-v{ global(VERSION_saker.rmi) }",
			},
		},
	)
}
install(){
	$export = export()
	nest.local.install($export[jar][Path])
}